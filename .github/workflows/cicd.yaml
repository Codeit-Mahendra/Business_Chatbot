Continuous-Deployment:
  needs: Continuous-Integration
  runs-on: self-hosted
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Cleanup and Deploy
      run: |
        # STOP everything first to free space
        docker stop app-container || true
        docker rm app-container || true
        
        # Remove ALL images to free maximum space
        docker rmi $(docker images -q) 2>/dev/null || true
        docker system prune -a -f
        
        # Pull ONLY the image we need
        docker pull ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPO }}:latest
        
        # Run the container
        docker run -d \
          --name app-container \
          -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -e AWS_DEFAULT_REGION="${{ secrets.AWS_DEFAULT_REGION }}" \
          -e PINECONE_API_KEY="${{ secrets.PINECONE_API_KEY }}" \
          -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
          -p 8080:8080 \
          ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPO }}:latest
